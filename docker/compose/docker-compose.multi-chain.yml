version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: on1builder-multi-chain
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      # Multi-chain configuration
      - CHAINS=${CHAINS:-1,11155111,137}
      
      # Ethereum Mainnet (Chain ID: 1)
      - CHAIN_1_CHAIN_NAME=${CHAIN_1_CHAIN_NAME:-Ethereum Mainnet}
      - CHAIN_1_HTTP_ENDPOINT=${CHAIN_1_HTTP_ENDPOINT:-https://mainnet.infura.io/v3/your-infura-key}
      - CHAIN_1_WEBSOCKET_ENDPOINT=${CHAIN_1_WEBSOCKET_ENDPOINT:-wss://mainnet.infura.io/ws/v3/your-infura-key}
      - CHAIN_1_WALLET_ADDRESS=${CHAIN_1_WALLET_ADDRESS:-0xYourMainnetWalletAddress}
      
      # Sepolia Testnet (Chain ID: 11155111)
      - CHAIN_11155111_CHAIN_NAME=${CHAIN_11155111_CHAIN_NAME:-Sepolia Testnet}
      - CHAIN_11155111_HTTP_ENDPOINT=${CHAIN_11155111_HTTP_ENDPOINT:-https://sepolia.infura.io/v3/your-infura-key}
      - CHAIN_11155111_WEBSOCKET_ENDPOINT=${CHAIN_11155111_WEBSOCKET_ENDPOINT:-wss://sepolia.infura.io/ws/v3/your-infura-key}
      - CHAIN_11155111_WALLET_ADDRESS=${CHAIN_11155111_WALLET_ADDRESS:-0xYourSepoliaWalletAddress}
      
      # Polygon Mainnet (Chain ID: 137)
      - CHAIN_137_CHAIN_NAME=${CHAIN_137_CHAIN_NAME:-Polygon Mainnet}
      - CHAIN_137_HTTP_ENDPOINT=${CHAIN_137_HTTP_ENDPOINT:-https://polygon-rpc.com}
      - CHAIN_137_WEBSOCKET_ENDPOINT=${CHAIN_137_WEBSOCKET_ENDPOINT:-wss://polygon-rpc.com}
      - CHAIN_137_WALLET_ADDRESS=${CHAIN_137_WALLET_ADDRESS:-0xYourPolygonWalletAddress}
      
      # Execution control
      - DRY_RUN=${DRY_RUN:-false}
      - GO_LIVE=${GO_LIVE:-true}
      
      # Vault configuration
      - VAULT_ADDR=${VAULT_ADDR:-http://vault:8200}
      - VAULT_TOKEN=${VAULT_TOKEN}
      - VAULT_PATH=${VAULT_PATH:-secret/on1builder}
      
      # Database configuration
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=on1builder
      - DB_USER=on1builder
      - DB_PASSWORD=${DB_PASSWORD:-on1builder}
      
      # Monitoring
      - PROMETHEUS_URL=http://prometheus-pushgateway:9091
      - GRAFANA_URL=${GRAFANA_URL:-http://grafana:3000}
    volumes:
      - ../data/logs:/app/logs
      - ../data:/app/data
      - ../config:/app/config:ro
    networks:
      - on1builder-network
    depends_on:
      - vault
      - postgres
      - prometheus-pushgateway
      - grafana
    command: ["python", "scripts/python/app_multi_chain.py"]

  vault:
    image: hashicorp/vault:1.13.0
    container_name: on1builder-vault
    restart: unless-stopped
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=${VAULT_TOKEN:-on1builder-dev-token}
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    volumes:
      - vault-data:/vault/data
    networks:
      - on1builder-network

  prometheus-pushgateway:
    image: prom/pushgateway:v1.5.1
    container_name: on1builder-prometheus-pushgateway
    restart: unless-stopped
    ports:
      - "9091:9091"
    networks:
      - on1builder-network

  prometheus:
    image: prom/prometheus:v2.40.0
    container_name: on1builder-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ../config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - on1builder-network
    depends_on:
      - prometheus-pushgateway

  grafana:
    image: grafana/grafana:9.3.0
    container_name: on1builder-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ../config/grafana/provisioning:/etc/grafana/provisioning:ro
      - ../dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - on1builder-network
    depends_on:
      - prometheus

  postgres:
    image: postgres:14-alpine
    container_name: on1builder-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=on1builder
      - POSTGRES_PASSWORD=${DB_PASSWORD:-on1builder}
      - POSTGRES_DB=on1builder
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../resources/schemas:/docker-entrypoint-initdb.d
    networks:
      - on1builder-network

networks:
  on1builder-network:
    driver: bridge

volumes:
  vault-data:
  prometheus-data:
  grafana-data:
  postgres-data:
